volumes:
# files:
#   driver: local
# mysql:
#   driver: local
  redis:
    driver: local
  portainer_data:
  nginx_config:
  staticfiles:

networks:
  default:
    ipam:
      driver: default
      config:
        - subnet: 172.22.0.0/16
          gateway: 172.22.0.1

services:

  epg:
    image: nginx
    container_name: epg
    restart: unless-stopped
    networks:
      default:
        ipv4_address: 172.22.0.19
    ports:
        - 3000:80
    volumes:
        - /home/pi/git/epg:/usr/share/nginx/html

  mail:
    image: marlonb/mailcrab:latest
    container_name: mailcrab
    restart: unless-stopped
    networks:
      default:
        ipv4_address: 172.22.0.18
    ports:
      - 1080:1080
      - 1025:1025
    environment:
      MAILCRAB_RETENTION_PERIOD: 86400 # delete mails older than 24h
#     ENABLE_TLS_AUTH: "true" # optionally enable TLS for the SMTP server
#     MAILCRAB_PREFIX: emails # optionally prefix the webinterface with a path
#   volumes:
#     key.pem:/app/key.pem:ro # optionally provide your own keypair for TLS, else a pair will be generated
#     cert.pem:/app/cert.pem:ro

#  mail:
#    image: cd2team/mailhog
#    container_name: mailhog
#    restart: unless-stopped
#    networks:
#      default:
#        ipv4_address: 172.22.0.18
#    ports:
#      - 1025:1025
#      - 8025:8025

#  mail:
#    image: ghcr.io/docker-mailserver/docker-mailserver:latest
#    container_name: mailserver
#    # Provide the FQDN of your mail server here (Your DNS MX record should point to this value)
#    hostname: mail.example.com
#    env_file: mailserver.env
#    # More information about the mail-server ports:
#    # https://docker-mailserver.github.io/docker-mailserver/latest/config/security/understanding-the-ports/
#    # To avoid conflicts with yaml base-60 float, DO NOT remove the quotation marks.
#    networks:
#      default:
#        ipv4_address: 172.22.0.18
#    ports:
#      - "25:25"    # SMTP  (explicit TLS => STARTTLS)
#      - "143:143"  # IMAP4 (explicit TLS => STARTTLS)
#      - "465:465"  # ESMTP (implicit TLS)
#      - "587:587"  # ESMTP (explicit TLS => STARTTLS)
#      - "993:993"  # IMAP4 (implicit TLS)
#    volumes:
#      - ./docker-data/dms/mail-data/:/var/mail/
#      - ./docker-data/dms/mail-state/:/var/mail-state/
#      - ./docker-data/dms/mail-logs/:/var/log/mail/
#      - ./docker-data/dms/config/:/tmp/docker-mailserver/
#      - /etc/localtime:/etc/localtime:ro
#    restart: unless-stopped
#    stop_grace_period: 1m
#    # Uncomment if using `ENABLE_FAIL2BAN=1`:
#    # cap_add:
#    #   - NET_ADMIN
#    healthcheck:
#      test: "ss --listening --tcp | grep -P 'LISTEN.+:smtp' || exit 1"
#      timeout: 3s
#      retries: 0

  # More info at https://github.com/pi-hole/docker-pi-hole/ and https://docs.pi-hole.net/
  pihole:
    container_name: pihole
    image: pihole/pihole:latest
    restart: unless-stopped
    networks:
      default:
        ipv4_address: 172.22.0.17
    #  For DHCP it is recommended to remove these ports and instead add: network_mode: "host"
    ports:
      - 53:53/tcp
      - 53:53/udp
#     - 67:67/udp # Only required if you are using Pi-hole as your DHCP server
      - 8084:80/tcp

    environment:
      TZ: Europe/Berlin
      WEBPASSWORD: ${PIHOLE_PASSWORD}

    volumes:
      - /home/pi/servers/pi-hole/pihole/:/etc/pihole/
      - /home/pi/servers/pi-hole/dnsmasq/:/etc/dnsmasq.d/

    dns:
      - 127.0.0.1
      - 1.1.1.1

#   cap_add:
#     - NET_ADMIN # Required if you are using Pi-hole as your DHCP server, else not needed

#  rabbitmq:
#    image: rabbitmq:management-alpine
#    container_name: rabbitmq
#    restart: unless-stopped
#    networks:
#      default:
#        ipv4_address: 172.22.0.16
#    ports:
#      - 5672:5672
#      - 15672:15672
#    volumes:
#      - /home/pi/servers/rabbitmq/data/:/var/lib/rabbitmq/
#      - /home/pi/servers/rabbitmq/log/:/var/log/rabbitmq/
#      - /home/pi/servers/rabbitmq/rabbitmq_enabled_plugins:/etc/rabbitmq/enabled_plugins

  recipes_db:
    image: postgres:16-alpine
    container_name: recipes_db
    restart: unless-stopped
    networks:
      default:
        ipv4_address: 172.22.0.15
    ports:
      - 5432:5432
    volumes:
      - /home/pi/servers/recipes/postgresql:/var/lib/postgresql/data
    env_file:
      - ./.env

  web_recipes:
    image: vabene1111/recipes
    container_name: recipes
    restart: unless-stopped
    networks:
      default:
        ipv4_address: 172.22.0.14
    volumes:
      - staticfiles:/opt/recipes/staticfiles
      - nginx_config:/opt/recipes/nginx/conf.d
      - /home/pi/servers/recipes/mediafiles:/opt/recipes/mediafiles
    depends_on:
      - recipes_db
    env_file:
      - ./.env

  recipes_nginx:
    image: nginx:mainline-alpine
    container_name: recipes_nginx
    restart: unless-stopped
    networks:
      default:
        ipv4_address: 172.22.0.13
    ports:
      - 8083:80
    volumes:
      - staticfiles:/static
      - nginx_config:/etc/nginx/conf.d:ro
      - /home/pi/servers/recipes/mediafiles:/media
    depends_on:
      - web_recipes
    env_file:
      - ./.env

  owncloud:
    image: owncloud/server:${OWNCLOUD_VERSION}
    container_name: owncloud
    restart: unless-stopped
    networks:
      default:
        ipv4_address: 172.22.0.12
    ports:
      - ${OWNCLOUD_HTTP_PORT}:8080
    depends_on:
      - mariadb
      - redis
    environment:
      - OWNCLOUD_DOMAIN=${OWNCLOUD_DOMAIN}
      - OWNCLOUD_DB_TYPE=mysql
      - OWNCLOUD_DB_NAME=owncloud
      - OWNCLOUD_DB_USERNAME=${OWNCLOUD_DB_USERNAME}
      - OWNCLOUD_DB_PASSWORD=${OWNCLOUD_DB_PASSWORD}
      - OWNCLOUD_DB_HOST=mariadb
      - OWNCLOUD_ADMIN_USERNAME=${OWNCLOUD_ADMIN_USERNAME}
      - OWNCLOUD_ADMIN_PASSWORD=${OWNCLOUD_ADMIN_PASSWORD}
      - OWNCLOUD_MYSQL_UTF8MB4=true
      - OWNCLOUD_REDIS_ENABLED=true
      - OWNCLOUD_REDIS_HOST=redis
    healthcheck:
      test: ["CMD", "/usr/bin/healthcheck"]
      interval: 30s
      timeout: 10s
      retries: 5
    volumes:
     - /home/pi/servers/owncloud:/mnt/data
#     - /home/owncloud:/mnt/data

  redis:
    image: redis:6
    container_name: redis
    restart: unless-stopped
    networks:
      default:
        ipv4_address: 172.22.0.11
    command: ["--databases", "1"]
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    volumes:
      - redis:/data

#  workbench:
#    image: ghcr.io/pelekekona/workbench/pi:latest
#    container_name: workbench
#    restart: unless-stopped
#    networks:
#      default:
#        ipv4_address: 172.22.0.10
#    ports:
#      - 9080:9080
#      - 9444:9443
#    depends_on:
#      - mariadb
#    volumes:
##     - /home/pi/servers/workbench:/servers/workbench
#      - /home/pi/servers/workbench:/opt/ol/wlp/usr/servers/workbench
#    environment:
#      - TZ=Europe/Berlin

  config:
    image: ghcr.io/pelekekona/config/pi:latest
    container_name: config
    restart: unless-stopped
    networks:
      default:
        ipv4_address: 172.22.0.10
    ports:
      - 9080:9080
      - 9444:9443
    depends_on:
      - mariadb
    volumes:
#     - /home/pi/servers/config:/servers/config
      - /home/pi/servers/config:/opt/ol/wlp/usr/servers/config
    environment:
      - TZ=Europe/Berlin

  mariadb:
    image: linuxserver/mariadb
    container_name: mariadb
    restart: unless-stopped
    networks:
      default:
        ipv4_address: 172.22.0.9
    ports:
      - 3306:3306
    volumes:
      - /home/pi/servers/mariadb:/config
    environment:
      - PUID=1000
      - PGID=1000
      - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}
      - TZ=Europe/Berlin
      - MYSQL_DATABASE=${MYSQL_DATABASE}
      - MYSQL_USER=${MYSQL_USER}
      - MYSQL_PASSWORD=${MYSQL_PASSWORD}
    healthcheck:
      test: ["CMD", "mysqladmin" ,"ping", "-h", "localhost"]
#     test: mysqladmin ping -h 127.0.0.1 -u $$MYSQL_USER --password=$$MYSQL_PASSWORD
      interval: 10s
      timeout: 5s
      retries: 5

  phpmyadmin:
    image: phpmyadmin
    container_name: phpmyadmin
    restart: unless-stopped
    networks:
      default:
        ipv4_address: 172.22.0.8
    ports:
      - 8080:80
    depends_on:
      - mariadb
    environment:
#     - PMA_ARBITRARY=1
      - PMA_HOST=mariadb
      - MYSQL_USERNAME=${MYSQL_USER}
      - MYSQL_ROOT_PASSWORD=${MYSQL_PASSWORD}
#     - PMA_ABSOLUTE_URI=http://phpmyadmin/

  guacamole:
    image: oznu/guacamole:armhf
    container_name: guacamole
    restart: unless-stopped
    networks:
      default:
        ipv4_address: 172.22.0.7
    ports:
      - 8081:8080
    volumes:
      - /home/pi/servers/guacamole:/config

  docs:
    image: ghcr.io/pelekekona/mkdocs:latest
    container_name: docs
    restart: unless-stopped
    networks:
      default:
        ipv4_address: 172.22.0.6
    ports:
      - 8000:80
#   volumes:
#     - /home/pi/servers/mkdocs:/mkdocs
    labels:
      - "com.centurylinklabs.watchtower.enable=true"

  watchtower:
    image: containrrr/watchtower
    container_name: watchtower
    restart: unless-stopped
    networks:
      default:
        ipv4_address: 172.22.0.5
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ~/.docker/config.json:/config.json
    command: --interval 14400 --cleanup --label-enable --debug

  portainer:
    image: portainer/portainer-ce
    container_name: portainer
    restart: unless-stopped
    networks:
      default:
        ipv4_address: 172.22.0.4
    ports:
      - 9000:9000
    volumes:
      - portainer_data:/data
      - /var/run/docker.sock:/var/run/docker.sock

#  dns:
#    image: strm/dnsmasq
#    container_name: dns
#    restart: unless-stopped
#    networks:
#      default:
#        ipv4_address: 172.22.0.3
#    ports:
#      - "53:53/udp"
#    volumes:
#      - /home/pi/servers/dns/dnsmasq.conf:/etc/dnsmasq.conf
#    cap_add:
#      - NET_ADMIN

  authelia:
    image: authelia/authelia:latest
    container_name: authelia
    restart: unless-stopped
    networks:
      default:
        ipv4_address: 172.22.0.3
    ports:
      - 9091:9091
    depends_on:
      - mariadb
    environment:
      - TZ=Europe/Berlin
      - AUTHELIA_STORAGE_MYSQL_PASSWORD_FILE=/secrets/STORAGE_PASSWORD
      - AUTHELIA_STORAGE_ENCRYPTION_KEY_FILE=/secrets/STORAGE_ENCRYPTION_KEY
    volumes:
      - /home/pi/servers/authelia/config:/config
      - /home/pi/servers/authelia/secrets:/secrets

  swag:
    image: linuxserver/swag
    container_name: swag
    restart: unless-stopped
    networks:
      default:
        ipv4_address: 172.22.0.2
    ports:
      - 443:443
      - 80:80 #optional
    depends_on:
#      - pihole
      - portainer
      - docs
      - epg
#      - workbench
      - config
      - owncloud
      - recipes_nginx
      - mail
    cap_add:
      - NET_ADMIN
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=Europe/Berlin
      - URL=tohus.dnshome.de
      - SUBDOMAINS=
      - EXTRA_DOMAINS=rezepte-tohus.dnshome.de
      - VALIDATION=http
      - EMAIL=andreas.keye@gmail.com
    volumes:
      - /home/pi/servers/swag:/config
      - /home/pi/servers/recipes/mediafiles:/media
